# Control file for Pipeline for Polymorphism and Divergence analysis

[FILES]
output_dir                  =
input_aln_dir               = 
input_aln_list_file 		= 
sample_tree_file            =

[SETTINGS]
site_type                   = codon         # codon or nucleotide, if codon is given, input sequence length has to be multiple of 3 only 3rd position is used to analysis
sample_order				= RG18N$, RG2$, RG19$, RG22$, RG24$, RG25$, RG28$, RG32N$, RG34$, RG36$, RG38N$, RG3$, RG5$, RG9$, MD03$, MD06$, MD105$, MD106$, MD146$, MD15$, MD197$, MD199$, MD201$, MD221$, MD224$, MD225$, MD233$, MD235$, MD238$, MD243$, MD251$, MD255$, MD63$, MD72$, MD73$, Dyak_\d+, Dere_\d+
marker_kw				    = marker # To detect marker sequences distinguishing from sample sequences.
markers_to_use              = TE_overlap_marker, const_expr_marker, transcript_overlap_marker, HQ2_marker
genetic_code_type           = b # a or b. In a-type genetic code, all six fold amino acids are in one class, whereas in b-type Ser are separated to 4f and 2f.
only_conserved_aa 			= True      # Analyze conserved codons on amino acid level if True is given.
mt2_seg_allele_filter_mode	= third_pos # third_pos or any (default: third_pos)
trim_kw						= None # If None is given, no trimming is conducted (default: None).
poly_info 		            =       # Sequence names of polymorphsim samples in collapse sequences. 
	RG  RG_collapse 3,4 9   0   14 	# Format: <prefix in sample seq>\t<prefix in collapse seq>\t<extant nodes (separeted by ",")>\t<ancestor node>\t<first seq pos in alignment>\t<allele count>
	MD	MD_collapse 5,6	10	14	21  # If no information is given, pipelines considers no polymorphism sample in input alignments.
single_allele_sp            = 35:1, 36:2 # 
mutation_category_num       = 12
iteration_num               = 5
internal_node_num           = 4
# TODO: It may be better to add BASEML setting (at least file path to BASEML control file) here.

bootstrap_method            = None # choose one among None, preAI or postAI. If None is given, no bootstrap sampling is conducted. (default: None)
rep_num                     = 0 # Number of bootstrap replicates. If None is given for bootstrap_method, rep_num is ignored even if a value greater than 1 is given.
assert_file_exist			= True
verbose_output              = True
